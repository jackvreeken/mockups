name: CMake

on: push

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  TAG: win64_vs2017

jobs:
  build-dockcross:
    runs-on: ubuntu-latest
    env:
      arch: manylinux1-x64
    strategy:
      fail-fast: false
      matrix:
        arch: [manylinux2014-x64,windows-shared-x64-posix,manylinux_2_28-x64,manylinux_2_34-x64]
        BUILD_TYPE: [Release,Debug]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # for git-restore-mtime
      - name: Setup dockcross
        run: |
          docker pull dockcross/${{ matrix.arch }}:latest
          docker run --rm dockcross/${{ matrix.arch }}:latest > dockcross
          chmod +x dockcross
      - name: Build
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: |
          ./dockcross cmake -B /work/build -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}} -DCMAKE_WINDOWS_EXPORT_ALL_SYMBOLS=ON -DCMAKE_INSTALL_PREFIX=/work/install
          ./dockcross cmake --build /work/build --target install --config ${{matrix.BUILD_TYPE}}

      - run: ls ${{github.workspace}}/install
      
      - name: Easy Zip Files
        uses: vimtor/action-zip@v1.1
        with:
          files: install/
          recursive: true
          dest: mockups_${{matrix.arch}}_${{matrix.BUILD_TYPE}}.zip
      - run: ls ${{github.workspace}}

      - uses: actions/upload-artifact@v4
        if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        with:
          name: artifacts
          path: ${{github.workspace}}/mockups_${{matrix.arch}}_${{matrix.BUILD_TYPE}}.zip

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files:  ${{github.workspace}}/mockups_${{matrix.arch}}_${{matrix.BUILD_TYPE}}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
